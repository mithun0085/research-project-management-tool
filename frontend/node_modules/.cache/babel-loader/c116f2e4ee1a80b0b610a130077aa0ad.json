{"ast":null,"code":"import CSSReset from '@chakra-ui/css-reset';\nimport { PortalManager } from '@chakra-ui/portal';\nimport { ThemeProvider, ColorModeProvider, GlobalStyle } from '@chakra-ui/system';\nimport { EnvironmentProvider } from '@chakra-ui/react-env';\nimport * as React from 'react';\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\n\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      environment = props.environment,\n      cssVarsRoot = props.cssVarsRoot;\n\n  var _children = /*#__PURE__*/React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    cssVarsRoot: cssVarsRoot\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, resetCSS && /*#__PURE__*/React.createElement(CSSReset, null), /*#__PURE__*/React.createElement(GlobalStyle, null), portalZIndex ? /*#__PURE__*/React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\n\nexport { ChakraProvider };","map":{"version":3,"sources":["E:/Group Projects/AF Project/research-project-management-tool/frontend/node_modules/@chakra-ui/provider/dist/chakra-ui-provider.esm.js"],"names":["CSSReset","PortalManager","ThemeProvider","ColorModeProvider","GlobalStyle","EnvironmentProvider","React","ChakraProvider","props","children","colorModeManager","portalZIndex","_props$resetCSS","resetCSS","_props$theme","theme","environment","cssVarsRoot","_children","createElement","options","config","zIndex"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,WAA3C,QAA8D,mBAA9D;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,gBAAgB,GAAGF,KAAK,CAACE,gBAD7B;AAAA,MAEIC,YAAY,GAAGH,KAAK,CAACG,YAFzB;AAAA,MAGIC,eAAe,GAAGJ,KAAK,CAACK,QAH5B;AAAA,MAIIA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,IAA7B,GAAoCA,eAJnD;AAAA,MAKIE,YAAY,GAAGN,KAAK,CAACO,KALzB;AAAA,MAMIA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,EAA1B,GAA+BA,YAN3C;AAAA,MAOIE,WAAW,GAAGR,KAAK,CAACQ,WAPxB;AAAA,MAQIC,WAAW,GAAGT,KAAK,CAACS,WARxB;;AAUA,MAAIC,SAAS,GAAG,aAAaZ,KAAK,CAACa,aAAN,CAAoBd,mBAApB,EAAyC;AACpEW,IAAAA,WAAW,EAAEA;AADuD,GAAzC,EAE1BP,QAF0B,CAA7B;;AAIA,SAAO,aAAaH,KAAK,CAACa,aAAN,CAAoBjB,aAApB,EAAmC;AACrDa,IAAAA,KAAK,EAAEA,KAD8C;AAErDE,IAAAA,WAAW,EAAEA;AAFwC,GAAnC,EAGjB,aAAaX,KAAK,CAACa,aAAN,CAAoBhB,iBAApB,EAAuC;AACrDO,IAAAA,gBAAgB,EAAEA,gBADmC;AAErDU,IAAAA,OAAO,EAAEL,KAAK,CAACM;AAFsC,GAAvC,EAGbR,QAAQ,IAAI,aAAaP,KAAK,CAACa,aAAN,CAAoBnB,QAApB,EAA8B,IAA9B,CAHZ,EAGiD,aAAaM,KAAK,CAACa,aAAN,CAAoBf,WAApB,EAAiC,IAAjC,CAH9D,EAGsGO,YAAY,GAAG,aAAaL,KAAK,CAACa,aAAN,CAAoBlB,aAApB,EAAmC;AACnLqB,IAAAA,MAAM,EAAEX;AAD2K,GAAnC,EAE/IO,SAF+I,CAAhB,GAElHA,SALA,CAHI,CAApB;AASD,CAxBD;;AA0BA,SAASX,cAAT","sourcesContent":["import CSSReset from '@chakra-ui/css-reset';\nimport { PortalManager } from '@chakra-ui/portal';\nimport { ThemeProvider, ColorModeProvider, GlobalStyle } from '@chakra-ui/system';\nimport { EnvironmentProvider } from '@chakra-ui/react-env';\nimport * as React from 'react';\n\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      environment = props.environment,\n      cssVarsRoot = props.cssVarsRoot;\n\n  var _children = /*#__PURE__*/React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    cssVarsRoot: cssVarsRoot\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, resetCSS && /*#__PURE__*/React.createElement(CSSReset, null), /*#__PURE__*/React.createElement(GlobalStyle, null), portalZIndex ? /*#__PURE__*/React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\n\nexport { ChakraProvider };\n"]},"metadata":{},"sourceType":"module"}