{"ast":null,"code":"'use strict';\n\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\n\nvar fails = require('../internals/fails');\n\nvar anObject = require('../internals/an-object');\n\nvar isCallable = require('../internals/is-callable');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar toLength = require('../internals/to-length');\n\nvar toString = require('../internals/to-string');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar advanceStringIndex = require('../internals/advance-string-index');\n\nvar getMethod = require('../internals/get-method');\n\nvar getSubstitution = require('../internals/get-substitution');\n\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n}; // IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\n\n\nvar REPLACE_KEEPS_$0 = function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n}(); // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\n\n\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n\n  return false;\n}();\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  var re = /./;\n\n  re.exec = function () {\n    var result = [];\n    result.groups = {\n      a: '7'\n    };\n    return result;\n  }; // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\n\n\n  return ''.replace(re, '$<a>') !== '7';\n}); // @@replace logic\n\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n  return [// `String.prototype.replace` method\n  // https://tc39.es/ecma262/#sec-string.prototype.replace\n  function replace(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n    return replacer ? replacer.call(searchValue, O, replaceValue) : nativeReplace.call(toString(O), searchValue, replaceValue);\n  }, // `RegExp.prototype[@@replace]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n  function (string, replaceValue) {\n    var rx = anObject(this);\n    var S = toString(string);\n\n    if (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 && replaceValue.indexOf('$<') === -1) {\n      var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n      if (res.done) return res.value;\n    }\n\n    var functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    var global = rx.global;\n\n    if (global) {\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n    }\n\n    var results = [];\n\n    while (true) {\n      var result = regExpExec(rx, S);\n      if (result === null) break;\n      results.push(result);\n      if (!global) break;\n      var matchStr = toString(result[0]);\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n    }\n\n    var accumulatedResult = '';\n    var nextSourcePosition = 0;\n\n    for (var i = 0; i < results.length; i++) {\n      result = results[i];\n      var matched = toString(result[0]);\n      var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n      var captures = []; // NOTE: This is equivalent to\n      //   captures = result.slice(1).map(maybeToString)\n      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n      // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\n      for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n\n      var namedCaptures = result.groups;\n\n      if (functionalReplace) {\n        var replacerArgs = [matched].concat(captures, position, S);\n        if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n        var replacement = toString(replaceValue.apply(undefined, replacerArgs));\n      } else {\n        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n      }\n\n      if (position >= nextSourcePosition) {\n        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n        nextSourcePosition = position + matched.length;\n      }\n    }\n\n    return accumulatedResult + S.slice(nextSourcePosition);\n  }];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);","map":{"version":3,"sources":["C:/Users/HIRUNI/BACKEND/b/research-project-management-tool/frontend/node_modules/react-scroll-to-bottom/node_modules/core-js/modules/es.string.replace.js"],"names":["fixRegExpWellKnownSymbolLogic","require","fails","anObject","isCallable","toIntegerOrInfinity","toLength","toString","requireObjectCoercible","advanceStringIndex","getMethod","getSubstitution","regExpExec","wellKnownSymbol","REPLACE","max","Math","min","maybeToString","it","undefined","String","REPLACE_KEEPS_$0","replace","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_SUPPORTS_NAMED_GROUPS","re","exec","result","groups","a","_","nativeReplace","maybeCallNative","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","call","string","rx","S","indexOf","res","done","value","functionalReplace","global","fullUnicode","unicode","lastIndex","results","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","replacerArgs","concat","replacement","apply","slice"],"mappings":"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","sourcesContent":["'use strict';\r\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\r\nvar fails = require('../internals/fails');\r\nvar anObject = require('../internals/an-object');\r\nvar isCallable = require('../internals/is-callable');\r\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\r\nvar toLength = require('../internals/to-length');\r\nvar toString = require('../internals/to-string');\r\nvar requireObjectCoercible = require('../internals/require-object-coercible');\r\nvar advanceStringIndex = require('../internals/advance-string-index');\r\nvar getMethod = require('../internals/get-method');\r\nvar getSubstitution = require('../internals/get-substitution');\r\nvar regExpExec = require('../internals/regexp-exec-abstract');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\n\r\nvar REPLACE = wellKnownSymbol('replace');\r\nvar max = Math.max;\r\nvar min = Math.min;\r\n\r\nvar maybeToString = function (it) {\r\n  return it === undefined ? it : String(it);\r\n};\r\n\r\n// IE <= 11 replaces $0 with the whole match, as if it was $&\r\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\r\nvar REPLACE_KEEPS_$0 = (function () {\r\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\r\n  return 'a'.replace(/./, '$0') === '$0';\r\n})();\r\n\r\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\r\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\r\n  if (/./[REPLACE]) {\r\n    return /./[REPLACE]('a', '$0') === '';\r\n  }\r\n  return false;\r\n})();\r\n\r\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\r\n  var re = /./;\r\n  re.exec = function () {\r\n    var result = [];\r\n    result.groups = { a: '7' };\r\n    return result;\r\n  };\r\n  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive\r\n  return ''.replace(re, '$<a>') !== '7';\r\n});\r\n\r\n// @@replace logic\r\nfixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {\r\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\r\n\r\n  return [\r\n    // `String.prototype.replace` method\r\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\r\n    function replace(searchValue, replaceValue) {\r\n      var O = requireObjectCoercible(this);\r\n      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\r\n      return replacer\r\n        ? replacer.call(searchValue, O, replaceValue)\r\n        : nativeReplace.call(toString(O), searchValue, replaceValue);\r\n    },\r\n    // `RegExp.prototype[@@replace]` method\r\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\r\n    function (string, replaceValue) {\r\n      var rx = anObject(this);\r\n      var S = toString(string);\r\n\r\n      if (\r\n        typeof replaceValue === 'string' &&\r\n        replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 &&\r\n        replaceValue.indexOf('$<') === -1\r\n      ) {\r\n        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\r\n        if (res.done) return res.value;\r\n      }\r\n\r\n      var functionalReplace = isCallable(replaceValue);\r\n      if (!functionalReplace) replaceValue = toString(replaceValue);\r\n\r\n      var global = rx.global;\r\n      if (global) {\r\n        var fullUnicode = rx.unicode;\r\n        rx.lastIndex = 0;\r\n      }\r\n      var results = [];\r\n      while (true) {\r\n        var result = regExpExec(rx, S);\r\n        if (result === null) break;\r\n\r\n        results.push(result);\r\n        if (!global) break;\r\n\r\n        var matchStr = toString(result[0]);\r\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n      }\r\n\r\n      var accumulatedResult = '';\r\n      var nextSourcePosition = 0;\r\n      for (var i = 0; i < results.length; i++) {\r\n        result = results[i];\r\n\r\n        var matched = toString(result[0]);\r\n        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\r\n        var captures = [];\r\n        // NOTE: This is equivalent to\r\n        //   captures = result.slice(1).map(maybeToString)\r\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\r\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\r\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\r\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\r\n        var namedCaptures = result.groups;\r\n        if (functionalReplace) {\r\n          var replacerArgs = [matched].concat(captures, position, S);\r\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\r\n          var replacement = toString(replaceValue.apply(undefined, replacerArgs));\r\n        } else {\r\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\r\n        }\r\n        if (position >= nextSourcePosition) {\r\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\r\n          nextSourcePosition = position + matched.length;\r\n        }\r\n      }\r\n      return accumulatedResult + S.slice(nextSourcePosition);\r\n    }\r\n  ];\r\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\r\n"]},"metadata":{},"sourceType":"script"}