{"ast":null,"code":"var _jsxFileName = \"E:\\\\Group Projects\\\\AF Project\\\\research-project-management-tool\\\\frontend\\\\src\\\\components\\\\body\\\\auth\\\\ResetPassword.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification';\nimport { isLength, isMatch } from '../../utils/validation/Validation';\nconst initialState = {\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\n\nfunction ResetPassword() {\n  const [data, setData] = useState(initialState);\n  const {\n    token\n  } = useParams();\n  const {\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n\n  const handleChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const handleResetPass = async () => {\n    if (isLength(password)) return setData({ ...data,\n      err: \"Password must be at least 6 characters.\",\n      success: ''\n    });\n    if (!isMatch(password, cf_password)) return setData({ ...data,\n      err: \"Password did not match.\",\n      success: ''\n    });\n\n    try {\n      const res = await axios.post('/user/reset', {\n        password\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      return setData({ ...data,\n        err: \"\",\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fg_pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Reset Your Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, err && showErrMsg(err), success && showSuccessMsg(success), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cf_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"cf_password\",\n    id: \"cf_password\",\n    value: cf_password,\n    onChange: handleChangeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Reset Password\")));\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["E:/Group Projects/AF Project/research-project-management-tool/frontend/src/components/body/auth/ResetPassword.js"],"names":["React","useState","axios","useParams","showErrMsg","showSuccessMsg","isLength","isMatch","initialState","password","cf_password","err","success","ResetPassword","data","setData","token","handleChangeInput","e","name","value","target","handleResetPass","res","post","headers","Authorization","msg","response"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport {useParams} from 'react-router-dom'\nimport {showErrMsg, showSuccessMsg} from '../../utils/notification/Notification'\nimport {isLength, isMatch} from '../../utils/validation/Validation'\n\n\nconst initialState = {\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\nfunction ResetPassword() {\n    const [data, setData] = useState(initialState)\n    const {token} = useParams()\n\n    const {password, cf_password, err, success} = data\n\n    const handleChangeInput = e => {\n        const {name, value} = e.target\n        setData({...data, [name]:value, err: '', success: ''})\n    }\n\n\n    const handleResetPass = async () => {\n        if(isLength(password))\n            return setData({...data, err: \"Password must be at least 6 characters.\", success: ''})\n\n        if(!isMatch(password, cf_password))\n            return setData({...data, err: \"Password did not match.\", success: ''})\n        \n        try {\n            const res = await axios.post('/user/reset', {password}, {\n                headers: {Authorization: token}\n            })\n\n            return setData({...data, err: \"\", success: res.data.msg})\n\n        } catch (err) {\n            err.response.data.msg && setData({...data, err: err.response.data.msg, success: ''})\n        }\n        \n    }\n\n\n    return (\n        <div className=\"fg_pass\">\n            <h2>Reset Your Password</h2>\n\n            <div className=\"row\">\n                {err && showErrMsg(err)}\n                {success && showSuccessMsg(success)}\n\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" value={password}\n                onChange={handleChangeInput} />\n\n                <label htmlFor=\"cf_password\">Confirm Password</label>\n                <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={cf_password}\n                onChange={handleChangeInput} />         \n\n                <button onClick={handleResetPass}>Reset Password</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPassword\n"]},"metadata":{},"sourceType":"module"}