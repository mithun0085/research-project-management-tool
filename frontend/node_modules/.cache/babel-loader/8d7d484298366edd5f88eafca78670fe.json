{"ast":null,"code":"var isObject = require('../internals/is-object');\n\nvar isSymbol = require('../internals/is-symbol');\n\nvar getMethod = require('../internals/get-method');\n\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive'); // `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = exoticToPrim.call(input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw TypeError(\"Can't convert object to primitive value\");\n  }\n\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};","map":{"version":3,"sources":["C:/Users/USER/Documents/groupProject/research-project-management-tool/frontend/node_modules/react-scroll-to-bottom/node_modules/core-js/internals/to-primitive.js"],"names":["isObject","require","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","module","exports","input","pref","exoticToPrim","result","undefined","call","TypeError"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,oCAAD,CAAjC;;AACA,IAAII,eAAe,GAAGJ,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAIK,YAAY,GAAGD,eAAe,CAAC,aAAD,CAAlC,C,CAEA;AACA;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACtC,MAAI,CAACV,QAAQ,CAACS,KAAD,CAAT,IAAoBP,QAAQ,CAACO,KAAD,CAAhC,EAAyC,OAAOA,KAAP;AACzC,MAAIE,YAAY,GAAGR,SAAS,CAACM,KAAD,EAAQH,YAAR,CAA5B;AACA,MAAIM,MAAJ;;AACA,MAAID,YAAJ,EAAkB;AAChB,QAAID,IAAI,KAAKG,SAAb,EAAwBH,IAAI,GAAG,SAAP;AACxBE,IAAAA,MAAM,GAAGD,YAAY,CAACG,IAAb,CAAkBL,KAAlB,EAAyBC,IAAzB,CAAT;AACA,QAAI,CAACV,QAAQ,CAACY,MAAD,CAAT,IAAqBV,QAAQ,CAACU,MAAD,CAAjC,EAA2C,OAAOA,MAAP;AAC3C,UAAMG,SAAS,CAAC,yCAAD,CAAf;AACD;;AACD,MAAIL,IAAI,KAAKG,SAAb,EAAwBH,IAAI,GAAG,QAAP;AACxB,SAAON,mBAAmB,CAACK,KAAD,EAAQC,IAAR,CAA1B;AACD,CAZD","sourcesContent":["var isObject = require('../internals/is-object');\r\nvar isSymbol = require('../internals/is-symbol');\r\nvar getMethod = require('../internals/get-method');\r\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\r\nvar wellKnownSymbol = require('../internals/well-known-symbol');\r\n\r\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\r\n\r\n// `ToPrimitive` abstract operation\r\n// https://tc39.es/ecma262/#sec-toprimitive\r\nmodule.exports = function (input, pref) {\r\n  if (!isObject(input) || isSymbol(input)) return input;\r\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\r\n  var result;\r\n  if (exoticToPrim) {\r\n    if (pref === undefined) pref = 'default';\r\n    result = exoticToPrim.call(input, pref);\r\n    if (!isObject(result) || isSymbol(result)) return result;\r\n    throw TypeError(\"Can't convert object to primitive value\");\r\n  }\r\n  if (pref === undefined) pref = 'number';\r\n  return ordinaryToPrimitive(input, pref);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}