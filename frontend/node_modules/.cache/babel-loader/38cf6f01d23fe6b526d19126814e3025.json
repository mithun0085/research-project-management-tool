{"ast":null,"code":"import { FOCUS_AUTO } from '../constants';\nimport { toArray } from './array';\nimport { tabbables } from './tabbables';\nvar queryTabbables = tabbables.join(',');\nvar queryGuardTabbables = \"\".concat(queryTabbables, \", [data-focus-guard]\");\n\nvar getFocusablesWithShadowDom = function (parent, withGuards) {\n  var _a;\n\n  return toArray(((_a = parent.shadowRoot) === null || _a === void 0 ? void 0 : _a.children) || parent.children).reduce(function (acc, child) {\n    return acc.concat(child.matches(withGuards ? queryGuardTabbables : queryTabbables) ? [child] : [], getFocusablesWithShadowDom(child));\n  }, []);\n};\n\nexport var getFocusables = function (parents, withGuards) {\n  return parents.reduce(function (acc, parent) {\n    return acc.concat( // add all tabbables inside and within shadow DOMs in DOM order\n    getFocusablesWithShadowDom(parent, withGuards), // add if node is tabbable itself\n    parent.parentNode ? toArray(parent.parentNode.querySelectorAll(queryTabbables)).filter(function (node) {\n      return node === parent;\n    }) : []);\n  }, []);\n};\n/**\n * return a list of focusable nodes within an area marked as \"auto-focusable\"\n * @param parent\n */\n\nexport var getParentAutofocusables = function (parent) {\n  var parentFocus = parent.querySelectorAll(\"[\".concat(FOCUS_AUTO, \"]\"));\n  return toArray(parentFocus).map(function (node) {\n    return getFocusables([node]);\n  }).reduce(function (acc, nodes) {\n    return acc.concat(nodes);\n  }, []);\n};","map":{"version":3,"sources":["E:/Group Projects/AF Project/research-project-management-tool/frontend/node_modules/focus-lock/dist/es2015/utils/tabUtils.js"],"names":["FOCUS_AUTO","toArray","tabbables","queryTabbables","join","queryGuardTabbables","concat","getFocusablesWithShadowDom","parent","withGuards","_a","shadowRoot","children","reduce","acc","child","matches","getFocusables","parents","parentNode","querySelectorAll","filter","node","getParentAutofocusables","parentFocus","map","nodes"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,IAAIC,cAAc,GAAGD,SAAS,CAACE,IAAV,CAAe,GAAf,CAArB;AACA,IAAIC,mBAAmB,GAAG,GAAGC,MAAH,CAAUH,cAAV,EAA0B,sBAA1B,CAA1B;;AACA,IAAII,0BAA0B,GAAG,UAAUC,MAAV,EAAkBC,UAAlB,EAA8B;AAC3D,MAAIC,EAAJ;;AACA,SAAOT,OAAO,CAAC,CAAC,CAACS,EAAE,GAAGF,MAAM,CAACG,UAAb,MAA6B,IAA7B,IAAqCD,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACE,QAAlE,KAA+EJ,MAAM,CAACI,QAAvF,CAAP,CAAwGC,MAAxG,CAA+G,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACxI,WAAOD,GAAG,CAACR,MAAJ,CAAWS,KAAK,CAACC,OAAN,CAAcP,UAAU,GAAGJ,mBAAH,GAAyBF,cAAjD,IAAmE,CAACY,KAAD,CAAnE,GAA6E,EAAxF,EAA4FR,0BAA0B,CAACQ,KAAD,CAAtH,CAAP;AACH,GAFM,EAEJ,EAFI,CAAP;AAGH,CALD;;AAMA,OAAO,IAAIE,aAAa,GAAG,UAAUC,OAAV,EAAmBT,UAAnB,EAA+B;AACtD,SAAOS,OAAO,CAACL,MAAR,CAAe,UAAUC,GAAV,EAAeN,MAAf,EAAuB;AACzC,WAAOM,GAAG,CAACR,MAAJ,EACP;AACAC,IAAAA,0BAA0B,CAACC,MAAD,EAASC,UAAT,CAFnB,EAGP;AACAD,IAAAA,MAAM,CAACW,UAAP,GACMlB,OAAO,CAACO,MAAM,CAACW,UAAP,CAAkBC,gBAAlB,CAAmCjB,cAAnC,CAAD,CAAP,CAA4DkB,MAA5D,CAAmE,UAAUC,IAAV,EAAgB;AAAE,aAAOA,IAAI,KAAKd,MAAhB;AAAyB,KAA9G,CADN,GAEM,EANC,CAAP;AAOH,GARM,EAQJ,EARI,CAAP;AASH,CAVM;AAWP;AACA;AACA;AACA;;AACA,OAAO,IAAIe,uBAAuB,GAAG,UAAUf,MAAV,EAAkB;AACnD,MAAIgB,WAAW,GAAGhB,MAAM,CAACY,gBAAP,CAAwB,IAAId,MAAJ,CAAWN,UAAX,EAAuB,GAAvB,CAAxB,CAAlB;AACA,SAAOC,OAAO,CAACuB,WAAD,CAAP,CACFC,GADE,CACE,UAAUH,IAAV,EAAgB;AAAE,WAAOL,aAAa,CAAC,CAACK,IAAD,CAAD,CAApB;AAA+B,GADnD,EAEFT,MAFE,CAEK,UAAUC,GAAV,EAAeY,KAAf,EAAsB;AAAE,WAAOZ,GAAG,CAACR,MAAJ,CAAWoB,KAAX,CAAP;AAA2B,GAFxD,EAE0D,EAF1D,CAAP;AAGH,CALM","sourcesContent":["import { FOCUS_AUTO } from '../constants';\nimport { toArray } from './array';\nimport { tabbables } from './tabbables';\nvar queryTabbables = tabbables.join(',');\nvar queryGuardTabbables = \"\".concat(queryTabbables, \", [data-focus-guard]\");\nvar getFocusablesWithShadowDom = function (parent, withGuards) {\n    var _a;\n    return toArray(((_a = parent.shadowRoot) === null || _a === void 0 ? void 0 : _a.children) || parent.children).reduce(function (acc, child) {\n        return acc.concat(child.matches(withGuards ? queryGuardTabbables : queryTabbables) ? [child] : [], getFocusablesWithShadowDom(child));\n    }, []);\n};\nexport var getFocusables = function (parents, withGuards) {\n    return parents.reduce(function (acc, parent) {\n        return acc.concat(\n        // add all tabbables inside and within shadow DOMs in DOM order\n        getFocusablesWithShadowDom(parent, withGuards), \n        // add if node is tabbable itself\n        parent.parentNode\n            ? toArray(parent.parentNode.querySelectorAll(queryTabbables)).filter(function (node) { return node === parent; })\n            : []);\n    }, []);\n};\n/**\n * return a list of focusable nodes within an area marked as \"auto-focusable\"\n * @param parent\n */\nexport var getParentAutofocusables = function (parent) {\n    var parentFocus = parent.querySelectorAll(\"[\".concat(FOCUS_AUTO, \"]\"));\n    return toArray(parentFocus)\n        .map(function (node) { return getFocusables([node]); })\n        .reduce(function (acc, nodes) { return acc.concat(nodes); }, []);\n};\n"]},"metadata":{},"sourceType":"module"}