{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\n\nvar nothing = function () {\n  return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\n\n\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n  var ref = React.useRef(null);\n\n  var _a = React.useState({\n    onScrollCapture: nothing,\n    onWheelCapture: nothing,\n    onTouchMoveCapture: nothing\n  }),\n      callbacks = _a[0],\n      setCallbacks = _a[1];\n\n  var forwardProps = props.forwardProps,\n      children = props.children,\n      className = props.className,\n      removeScrollBar = props.removeScrollBar,\n      enabled = props.enabled,\n      shards = props.shards,\n      sideCar = props.sideCar,\n      noIsolation = props.noIsolation,\n      inert = props.inert,\n      allowPinchZoom = props.allowPinchZoom,\n      _b = props.as,\n      Container = _b === void 0 ? 'div' : _b,\n      rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\"]);\n\n  var SideCar = sideCar;\n  var containerRef = useMergeRefs([ref, parentRef]);\n\n  var containerProps = __assign(__assign({}, rest), callbacks);\n\n  return React.createElement(React.Fragment, null, enabled && React.createElement(SideCar, {\n    sideCar: effectCar,\n    removeScrollBar: removeScrollBar,\n    shards: shards,\n    noIsolation: noIsolation,\n    inert: inert,\n    setCallbacks: setCallbacks,\n    allowPinchZoom: !!allowPinchZoom,\n    lockRef: ref\n  }), forwardProps ? React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), {\n    ref: containerRef\n  })) : React.createElement(Container, __assign({}, containerProps, {\n    className: className,\n    ref: containerRef\n  }), children));\n});\nRemoveScroll.defaultProps = {\n  enabled: true,\n  removeScrollBar: true,\n  inert: false\n};\nRemoveScroll.classNames = {\n  fullWidth: fullWidthClassName,\n  zeroRight: zeroRightClassName\n};\nexport { RemoveScroll };","map":{"version":3,"sources":["E:/Group Projects/AF Project/research-project-management-tool/frontend/node_modules/react-remove-scroll/dist/es2015/UI.js"],"names":["__assign","__rest","React","fullWidthClassName","zeroRightClassName","useMergeRefs","effectCar","nothing","RemoveScroll","forwardRef","props","parentRef","ref","useRef","_a","useState","onScrollCapture","onWheelCapture","onTouchMoveCapture","callbacks","setCallbacks","forwardProps","children","className","removeScrollBar","enabled","shards","sideCar","noIsolation","inert","allowPinchZoom","_b","as","Container","rest","SideCar","containerRef","containerProps","createElement","Fragment","lockRef","cloneElement","Children","only","defaultProps","classNames","fullWidth","zeroRight"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n"]},"metadata":{},"sourceType":"module"}