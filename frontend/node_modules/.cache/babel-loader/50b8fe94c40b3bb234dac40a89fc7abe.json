{"ast":null,"code":"var anObject = require('../internals/an-object');\n\nvar isCallable = require('../internals/is-callable');\n\nvar classof = require('../internals/classof-raw');\n\nvar regexpExec = require('../internals/regexp-exec'); // `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\n\n\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n\n  if (isCallable(exec)) {\n    var result = exec.call(R, S);\n    if (result !== null) anObject(result);\n    return result;\n  }\n\n  if (classof(R) === 'RegExp') return regexpExec.call(R, S);\n  throw TypeError('RegExp#exec called on incompatible receiver');\n};","map":{"version":3,"sources":["C:/Users/HIRUNI/BACKEND/b/research-project-management-tool/frontend/node_modules/react-scroll-to-bottom/node_modules/core-js/internals/regexp-exec-abstract.js"],"names":["anObject","require","isCallable","classof","regexpExec","module","exports","R","S","exec","result","call","TypeError"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,0BAAD,CAArB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,0BAAD,CAAxB,C,CAEA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC/B,MAAIC,IAAI,GAAGF,CAAC,CAACE,IAAb;;AACA,MAAIP,UAAU,CAACO,IAAD,CAAd,EAAsB;AACpB,QAAIC,MAAM,GAAGD,IAAI,CAACE,IAAL,CAAUJ,CAAV,EAAaC,CAAb,CAAb;AACA,QAAIE,MAAM,KAAK,IAAf,EAAqBV,QAAQ,CAACU,MAAD,CAAR;AACrB,WAAOA,MAAP;AACD;;AACD,MAAIP,OAAO,CAACI,CAAD,CAAP,KAAe,QAAnB,EAA6B,OAAOH,UAAU,CAACO,IAAX,CAAgBJ,CAAhB,EAAmBC,CAAnB,CAAP;AAC7B,QAAMI,SAAS,CAAC,6CAAD,CAAf;AACD,CATD","sourcesContent":["var anObject = require('../internals/an-object');\r\nvar isCallable = require('../internals/is-callable');\r\nvar classof = require('../internals/classof-raw');\r\nvar regexpExec = require('../internals/regexp-exec');\r\n\r\n// `RegExpExec` abstract operation\r\n// https://tc39.es/ecma262/#sec-regexpexec\r\nmodule.exports = function (R, S) {\r\n  var exec = R.exec;\r\n  if (isCallable(exec)) {\r\n    var result = exec.call(R, S);\r\n    if (result !== null) anObject(result);\r\n    return result;\r\n  }\r\n  if (classof(R) === 'RegExp') return regexpExec.call(R, S);\r\n  throw TypeError('RegExp#exec called on incompatible receiver');\r\n};\r\n"]},"metadata":{},"sourceType":"script"}