{"ast":null,"code":"import { isBrowser, runIfFn, getOwnerWindow } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\n/**\r\n * useSafeLayoutEffect enables us to safely call `useLayoutEffect` on the browser\r\n * (for SSR reasons)\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect in the browser.\r\n *\r\n * @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\r\n */\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\r\n * React hook to persist any value between renders,\r\n * but keeps it up-to-date if it changes.\r\n *\r\n * @param fn the function to persist\r\n * @param deps the function dependency list\r\n */\n\nfunction useCallbackRef(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var ref = React.useRef(fn);\n  useSafeLayoutEffect(function () {\n    ref.current = fn;\n  }); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current == null ? void 0 : ref.current.apply(ref, args);\n  }, deps);\n}\n/**\r\n * React hook to manage browser event listeners\r\n *\r\n * @param event the event name\r\n * @param handler the event handler function to execute\r\n * @param env the dom environment to execute against (defaults to `document`)\r\n * @param options the event listener options\r\n *\r\n * @internal\r\n */\n\n\nfunction useEventListener(event, handler, env, options) {\n  var listener = useCallbackRef(handler);\n  React.useEffect(function () {\n    var _runIfFn;\n\n    var node = (_runIfFn = runIfFn(env)) != null ? _runIfFn : document;\n\n    if (!handler) {\n      return;\n    }\n\n    node.addEventListener(event, listener, options);\n    return function () {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, env, options, listener, handler]);\n  return function () {\n    var _runIfFn2;\n\n    var node = (_runIfFn2 = runIfFn(env)) != null ? _runIfFn2 : document;\n    node.removeEventListener(event, listener, options);\n  };\n}\n\nfunction useAnimationState(props) {\n  var isOpen = props.isOpen,\n      ref = props.ref;\n\n  var _useState = useState(isOpen),\n      mounted = _useState[0],\n      setMounted = _useState[1];\n\n  var _useState2 = useState(false),\n      once = _useState2[0],\n      setOnce = _useState2[1];\n\n  useEffect(function () {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  useEventListener(\"animationend\", function () {\n    setMounted(isOpen);\n  }, function () {\n    return ref.current;\n  });\n  var hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete: function onComplete() {\n      var _ref$current;\n\n      var win = getOwnerWindow(ref.current);\n      var evt = new win.CustomEvent(\"animationend\", {\n        bubbles: true\n      });\n      (_ref$current = ref.current) == null ? void 0 : _ref$current.dispatchEvent(evt);\n    }\n  };\n}\n\nexport { useSafeLayoutEffect as a, useEventListener as b, useAnimationState as c, useCallbackRef as u };","map":{"version":3,"sources":["C:/Users/HIRUNI/BACKEND/b/research-project-management-tool/frontend/node_modules/@chakra-ui/hooks/dist/use-animation-state-5054a9f7.esm.js"],"names":["isBrowser","runIfFn","getOwnerWindow","React","useState","useEffect","useSafeLayoutEffect","useLayoutEffect","useCallbackRef","fn","deps","ref","useRef","current","useCallback","_len","arguments","length","args","Array","_key","apply","useEventListener","event","handler","env","options","listener","_runIfFn","node","document","addEventListener","removeEventListener","_runIfFn2","useAnimationState","props","isOpen","_useState","mounted","setMounted","_useState2","once","setOnce","hidden","present","onComplete","_ref$current","win","evt","CustomEvent","bubbles","dispatchEvent","a","b","c","u"],"mappings":"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","sourcesContent":["import { isBrowser, runIfFn, getOwnerWindow } from '@chakra-ui/utils';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n/**\r\n * useSafeLayoutEffect enables us to safely call `useLayoutEffect` on the browser\r\n * (for SSR reasons)\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect in the browser.\r\n *\r\n * @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\r\n */\r\n\r\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\r\n\r\n/**\r\n * React hook to persist any value between renders,\r\n * but keeps it up-to-date if it changes.\r\n *\r\n * @param fn the function to persist\r\n * @param deps the function dependency list\r\n */\r\n\r\nfunction useCallbackRef(fn, deps) {\r\n  if (deps === void 0) {\r\n    deps = [];\r\n  }\r\n\r\n  var ref = React.useRef(fn);\r\n  useSafeLayoutEffect(function () {\r\n    ref.current = fn;\r\n  }); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  return React.useCallback(function () {\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    return ref.current == null ? void 0 : ref.current.apply(ref, args);\r\n  }, deps);\r\n}\r\n\r\n/**\r\n * React hook to manage browser event listeners\r\n *\r\n * @param event the event name\r\n * @param handler the event handler function to execute\r\n * @param env the dom environment to execute against (defaults to `document`)\r\n * @param options the event listener options\r\n *\r\n * @internal\r\n */\r\nfunction useEventListener(event, handler, env, options) {\r\n  var listener = useCallbackRef(handler);\r\n  React.useEffect(function () {\r\n    var _runIfFn;\r\n\r\n    var node = (_runIfFn = runIfFn(env)) != null ? _runIfFn : document;\r\n\r\n    if (!handler) {\r\n      return;\r\n    }\r\n\r\n    node.addEventListener(event, listener, options);\r\n    return function () {\r\n      node.removeEventListener(event, listener, options);\r\n    };\r\n  }, [event, env, options, listener, handler]);\r\n  return function () {\r\n    var _runIfFn2;\r\n\r\n    var node = (_runIfFn2 = runIfFn(env)) != null ? _runIfFn2 : document;\r\n    node.removeEventListener(event, listener, options);\r\n  };\r\n}\r\n\r\nfunction useAnimationState(props) {\r\n  var isOpen = props.isOpen,\r\n      ref = props.ref;\r\n\r\n  var _useState = useState(isOpen),\r\n      mounted = _useState[0],\r\n      setMounted = _useState[1];\r\n\r\n  var _useState2 = useState(false),\r\n      once = _useState2[0],\r\n      setOnce = _useState2[1];\r\n\r\n  useEffect(function () {\r\n    if (!once) {\r\n      setMounted(isOpen);\r\n      setOnce(true);\r\n    }\r\n  }, [isOpen, once, mounted]);\r\n  useEventListener(\"animationend\", function () {\r\n    setMounted(isOpen);\r\n  }, function () {\r\n    return ref.current;\r\n  });\r\n  var hidden = isOpen ? false : !mounted;\r\n  return {\r\n    present: !hidden,\r\n    onComplete: function onComplete() {\r\n      var _ref$current;\r\n\r\n      var win = getOwnerWindow(ref.current);\r\n      var evt = new win.CustomEvent(\"animationend\", {\r\n        bubbles: true\r\n      });\r\n      (_ref$current = ref.current) == null ? void 0 : _ref$current.dispatchEvent(evt);\r\n    }\r\n  };\r\n}\r\n\r\nexport { useSafeLayoutEffect as a, useEventListener as b, useAnimationState as c, useCallbackRef as u };\r\n"]},"metadata":{},"sourceType":"module"}